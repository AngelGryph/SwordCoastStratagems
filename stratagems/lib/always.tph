////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
//// 	Initial function load, done every time
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////

   SILENT
    INCLUDE ~%MOD_FOLDER%/sfo/install_sfo.tpa~ // SFO 1e
	OUTER_SPRINT sfo_library_path "sfo2e" // the path (relative to your mod directory) to the directory SFO is in. Usually 'sfo'.
	OUTER_SPRINT sfo_tra_path "lang" // the path (relative to your mod directory) to the directory in which you keep tra files. Usually 'lang' or 'tra'.
	OUTER_SPRINT sfo_marker_prefix "dw#" // your modder prefix, possibly followed by some symbol(s) that distinguish this mod from your other mods.
	OUTER_SPRINT ssl_loc "%MOD_FOLDER%/ssl"

	PRINT "Loading SFO 2e..."
	SILENT
	OUTER_SPRINT sfo_extra_tra_folders "lang_som"
	OUTER_SPRINT sfo_tra_load "shared.tra"
	INCLUDE "%MOD_FOLDER%/%sfo_library_path%/sfo_init.tpc"
	VERBOSE
	PRINT "...done"
 
	SILENT
	
	//////////////////////////////////////
	/// used widely
	LAM data_hp_range

////////////////////////////////////////////////////////
//// detect my and third-party mods
////////////////////////////////////////////////////////

	// Detect Ascension

	OUTER_SET ascension=FILE_EXISTS_IN_GAME "fingrom.cre" 
	
	// Detect Spell Revisions

	OUTER_SET demivrgvs=FILE_EXISTS_IN_GAME ~dvimhere.mrk~ 
	
	// detect Item Revisions
	
	OUTER_SET item_revisions= MOD_IS_INSTALLED "item_rev.tp2" 0 

	// detect Refinements HLAs - currently deprecated
	
	OUTER_SET refinements=0

	//OUTER_SET refinements= FILE_EXISTS_IN_GAME ~tg#come.spl~ 
	
	// detect paladin Smite Evil
	
	OUTER_SET smite_evil_new= MOD_IS_INSTALLED "dw_talents" 40300
	OUTER_SET smite_evil_old = !smite_evil_new && (is_iwd || MOD_IS_INSTALLED "dw_talents" 40200 || FILE_EXISTS_IN_GAME "CDIPLSE.SPL")
	
	// detect Talents of Faerun HLAs 
	
	LAF check_label STR_VAR label=dw-hlas RET talents_of_faerun_hlas=value END

	// detect Talents of Faerun new spells
	
	LAF check_label STR_VAR label=dw_tof_divine_spells RET tof_divine_spells=value END
	LAF check_label STR_VAR label=dw_tof_arcane_spells RET tof_arcane_spells=value END

	// detect Talents of Faerun new kits
	
	LAF check_label STR_VAR label=dw-elementalist RET elementalists=value END
	
	// detect Talents of Faerun sphere system
	
	LAF check_label STR_VAR label=dw#spheres_installed RET tof_spheres=value END
		
	// detect Talents of Faerun new prof system
	
	LAF check_label STR_VAR label=dw-prof RET tof_prof=value END

	// detect IWD spellsystem
	
	LAF check_label STR_VAR label=dw_iwdspells_arcane_installed RET dw_iwd_arcane=value END
	OUTER_SET iwd_arcane=( (MOD_IS_INSTALLED "iwdification.tp2" 30) || dw_iwd_arcane || is_iwd ) 
	
	LAF check_label STR_VAR label=dw_iwdspells_divine_installed RET dw_iwd_divine=value END
	OUTER_SET iwd_divine= ( (MOD_IS_INSTALLED "iwdification.tp2" 40) || dw_iwd_divine || is_iwd ) 

	// detect Rogue Rebalancing poisoned weapons
	
	OUTER_SET rr_poison= FILE_EXISTS_IN_GAME "fl#tas02.spl" 

	// detect Infinity Animations

	ACTION_IF MOD_IS_INSTALLED ~setup-infinityanimations.tp2~ ~0~ THEN BEGIN
	   OUTER_SET ~infinity_animations~=1
	END ELSE BEGIN
	   OUTER_SET ~infinity_animations~=0
	END
	
	// detect my own tweaks to massive damage/imprisonment/petrification
	
	LAF check_label STR_VAR label=dw#resurrection RET revised_massive_damage=value END


	// set relevant base folders
	ACTION_IF GAME_IS iwdee BEGIN
	   OUTER_SPRINT base_folder_spells_mage iwd
	   OUTER_SPRINT base_folder_spells_priest iwd
	END ELSE BEGIN
		ACTION_IF demivrgvs BEGIN
			OUTER_SPRINT base_folder_spells_mage demivrgvs
			OUTER_SPRINT base_folder_spells_priest demivrgvs
			LAF ini_check STR_VAR ini=iwd_overrides_sr RET iwdfirst=value END
			ACTION_IF iwd_arcane && iwdfirst BEGIN
				OUTER_SPRINT base_folder_spells_mage iwd
			END 
			ACTION_IF iwd_divine && iwdfirst BEGIN
				OUTER_SPRINT base_folder_spells_priest iwd
			END 
		END ELSE BEGIN
			ACTION_IF iwd_arcane BEGIN
				OUTER_SPRINT base_folder_spells_mage iwd
			END ELSE BEGIN
				OUTER_SPRINT base_folder_spells_mage vanilla
			END
			ACTION_IF iwd_divine BEGIN
				OUTER_SPRINT base_folder_spells_priest iwd
			END ELSE BEGIN
				OUTER_SPRINT base_folder_spells_priest vanilla
			END
		END 
	END

	ACTION_IF talents_of_faerun_hlas BEGIN
		 OUTER_SPRINT base_folder_hlas tof
	END ELSE
	ACTION_IF refinements BEGIN
		 OUTER_SPRINT base_folder_hlas refinements
	END ELSE BEGIN
		 OUTER_SPRINT base_folder_hlas vanilla
	END

///////////////////////////////////////////////////////////////
// Set SSL library files and SSL variables
///////////////////////////////////////////////////////////////

   OUTER_SPRINT ssllibrary "%MOD_FOLDER%/ssl/library %MOD_FOLDER%/ssl/difficulty"

   ACTION_IF ascension BEGIN
      OUTER_SPRINT sslvariables "%sslvariables%&IsAscension=True"
   END

   ACTION_IF enhanced_edition BEGIN
        OUTER_SPRINT sslvariables ~%sslvariables%&EnhancedEdition=True~
        OUTER_SPRINT ssllibrary "%ssllibrary% %MOD_FOLDER%/ssl/library_ee %MOD_FOLDER%/ssl/libwpn_ee"
   END ELSE BEGIN
        OUTER_SPRINT ssllibrary "%ssllibrary% %MOD_FOLDER%/ssl/libwpn_vanilla"
   END
   
   ACTION_IF is_iwd BEGIN
      OUTER_SPRINT sslvariables ~%sslvariables%&IsIWD=True~
   END
   

   ACTION_IF dw_iwd_arcane BEGIN
        OUTER_SPRINT sslvariables "%sslvariables%"^"&"^"SCSIWDArcane=True"
   END
   ACTION_IF iwd_arcane BEGIN
        OUTER_SPRINT sslvariables "%sslvariables%"^"&"^"IsIWDArcane=True"
   END

   ACTION_IF dw_iwd_divine BEGIN
        OUTER_SPRINT sslvariables "%sslvariables%"^"&"^"SCSIWDDivine=True"
        OUTER_SPRINT ssllibrary "%ssllibrary% %MOD_FOLDER%/ssl/library_iwd_divine"
   END
   ACTION_IF iwd_divine BEGIN
        OUTER_SPRINT sslvariables "%sslvariables%"^"&"^"IsIWDDivine=True"
        OUTER_SPRINT ssllibrary "%ssllibrary% %MOD_FOLDER%/ssl/library_iwd_divine"
   END

   ACTION_IF demivrgvs BEGIN
           OUTER_SPRINT ~sslvariables~ ~%sslvariables%~^~&~^~Demivrgvs=True~
           OUTER_SPRINT ssllibrary ~%ssllibrary% %MOD_FOLDER%/ssl/library_sr~
   END
   ACTION_IF item_revisions BEGIN
           OUTER_SPRINT ~sslvariables~ ~%sslvariables%~^~&~^~ItemRevisions=True~
           OUTER_SPRINT ssllibrary ~%ssllibrary% %MOD_FOLDER%/ssl/library_ir~
   END ELSE BEGIN
           OUTER_SPRINT ssllibrary ~%ssllibrary% %MOD_FOLDER%/ssl/library_notir~
   END

   ACTION_IF talents_of_faerun_hlas BEGIN
           OUTER_SPRINT ~sslvariables~ ~%sslvariables%~^~&~^~Talents=True~			
   END ELSE
   ACTION_IF refinements BEGIN
           OUTER_SPRINT ~sslvariables~ ~%sslvariables%~^~&~^~Refinements=True~
   END

  ACTION_IF GAME_IS bgt BEGIN
     OUTER_SPRINT sslvariables ~%sslvariables%&IsTrilogy=True~
  END
  
  ACTION_IF rr_poison BEGIN
           OUTER_SPRINT ~sslvariables~ ~%sslvariables%~^~&~^~RogueRebalancingPoison=True~
  END

  ACTION_IF !is_bg2 BEGIN
     OUTER_SPRINT sslvariables ~%sslvariables%&PlusUnknownSafe=PlusNullSafe&MultipleDamageTypeSafe=NullSafe&IsBG1Only=True~
  END
  
  ACTION_IF smite_evil_new BEGIN
    OUTER_SPRINT sslvariables ~%sslvariables%&SmiteEvilNew=True~  
  END ELSE
  ACTION_IF smite_evil_old BEGIN
    OUTER_SPRINT sslvariables ~%sslvariables%&SmiteEvilOld=True~  
  END 
 
  ACTION_IF revised_massive_damage BEGIN
           OUTER_SPRINT ~sslvariables~ ~%sslvariables%~^~&~^~RevisedMassiveDamage=True~
 	
  END
  


        // check for safe version of imprisonment

        ACTION_IF FILE_EXISTS_IN_GAME ~tb#impri.spl~ OR FILE_EXISTS_IN_GAME ~dvimhere.mrk~ OR revised_massive_damage BEGIN
           OUTER_SPRINT ~sslvariables~ ~%sslvariables%~^~&SafeImprisonment=True~
        END


  // check for external library (must be last)

  LAF ini_check INT_VAR silent=1 STR_VAR ini=library_override RET value END
  ACTION_IF ("%value%" STRING_COMPARE_CASE none && "%value%" STRING_COMPARE_CASE "0") BEGIN
      OUTER_SPRINT list "%value%"
      OUTER_WHILE "%list%" STRING_COMPARE_CASE "" BEGIN
         LAF return_first_entry STR_VAR list separator="|" RET entry list END
         OUTER_SPRINT ssllibrary "%ssllibrary% %data_loc%/%entry%.slb"
      END
  END
  
    // Construct HLA table if it doesn't exist (do this every time, it might change)

	LAF include STR_VAR file=initialise_hla_feat.tph locbase=lib END

    ACTION_IF !FILE_EXISTS "%data_loc_root%/dw_shared/dw_feat_data.2da" BEGIN
       SILENT
       LAF initialise_hla_feat END
    END
	
	ACTION_IF is_bg2 BEGIN

		APPEND_OUTER "%data_loc_root%/dw_shared/dw_feat_data.2da" "WIZARD_IMPROVED_ALACRITY_NPC dw#qalac grant" UNLESS "WIZARD_IMPROVED_ALACRITY_NPC dw#qalac grant"// helpful to have this present right away, to avoid false-positive error messages

		ACTION_IF VARIABLE_IS_SET WIZARD_CREATE_FLESH_GOLEM BEGIN
			APPEND_OUTER "%data_loc_root%/dw_shared/dw_feat_data.2da" "WIZARD_CREATE_FLESH_GOLEM_NPC dw#fgnpc grant" UNLESS "WIZARD_CREATE_FLESH_GOLEM_NPC dw#fgnpc grant"// helpful to have this present right away, to avoid false-positive error messages
		END
		// read in contents of HLA table	

		LAM read_hla_feat
	END



////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
//// 	Things to do only once
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////

ACTION_IF !(VARIABLE_IS_SET ~initialise~ && FILE_EXISTS "%workspace%/do_once_marker_scs.mrk") BEGIN
	
	ACTION_IF FILE_EXISTS "%workspace%/do_once_marker_scs.mrk" BEGIN
		DELETE + "%workspace%/do_once_marker_scs.mrk"
	END
	COPY_EXISTING "misc01.itm" "%workspace%/do_once_marker_scs.mrk"

  ACTION_IF ((FILE_EXISTS ~dlc/sod-dlc.zip~) OR (FILE_EXISTS ~sod-dlc.zip~)) THEN BEGIN FAIL @27 END // Modmerge check

  SILENT
  OUTER_SET initialise=1

////////////////////////////////////////////////////////
//// 	Load indirectly-defined resrefs (not much used in 
////    SCS, this is just for SoM / LoI content)
/////////////////////////////////////////////////////////

	OUTER_SET sfo_indirect_load_make_dialogs=0
	LAM indirect_load


////////////////////////////////////////////////////////
//// 	On IWDEE, point the 'BEHOLDER_XX' spell.ids entries at
///     the INNATE_BEHOLDER_XX spells (likewise a few Symbols)
/////////////////////////////////////////////////////////



ACTION_IF GAME_IS iwdee BEGIN
   ACTION_DEFINE_ASSOCIATIVE_ARRAY spell_ids_missing BEGIN
      1716=>CLERIC_SYMBOL_HOPELESSNESS
      1714=>CLERIC_SYMBOL_PAIN
      3137=>BEHOLDER_ANTIMAGIC_RAY
      3141=>BEHOLDER_CHARM_PERSON
      3142=>BEHOLDER_SLEEP
      3143=>BEHOLDER_FLESH_TO_STONE
      3144=>BEHOLDER_DISINTEGRATE
      3145=>BEHOLDER_FEAR
      3146=>BEHOLDER_SLOW
      3147=>BEHOLDER_CAUSE_SERIOUS_WOUNDS
      3148=>BEHOLDER_DEATH_RAY
   END
	ACTION_PHP_EACH spell_ids_missing AS code=>name BEGIN
		  
		  ACTION_IF !FILE_CONTAINS_EVALUATED ("override/spell.ids" "%code%[ %TAB%]+%name%") BEGIN
			 APPEND "spell.ids" "%code% %name%"
		  END
	END
END


////////////////////////////////////////////////////////
//// 	Set up hotkeys
////////////////////////////////////////////////////////


  ACTION_FOR_EACH hotkey IN A B C D E F G H I J K L M N O P Q R S T U V W X Y Z BEGIN
     LAF ini_check INT_VAR silent=1  STR_VAR ini="hot_key_%hotkey%" RET value END
     ACTION_IF "%value%" STRING_EQUAL_CASE "0" BEGIN
            OUTER_SPRINT "hot_key_%hotkey%" "%hotkey%"
     END ELSE BEGIN
            OUTER_SPRINT "hot_key_%hotkey%" "%value%"
     END
  END

  DEFINE_PATCH_FUNCTION ssl_hotkey_swap BEGIN
     REPLACE_EVALUATE "HotKey(\([A-Z]\))" 
     BEGIN
         SPRINT value EVAL "%hot_key_%MATCH1%%"
     END
     ~HotKey(%value%)~
  END


//////////////////////////////////////////////////////
//// general variables, macros and functions
////////////////////////////////////////////////////////




///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// install ToB Extender(Windows only)
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

ACTION_IF (!enhanced_edition && !FILE_EXISTS "tobex_ini/tobextweak.ini") BEGIN

    OUTER_SPRINT ~TOBEX_MOD_DIRECTORY~ ~%MOD_FOLDER%~
    LOAD_TRA ~%MOD_FOLDER%/tobex_redist/tobex.tra~
    INCLUDE ~%MOD_FOLDER%/tobex_redist/tobex.tpa~
    SILENT

END


///////////////////////////////////////////////////
// Get resources (need to do AFTER SR/Refinements detected)
///////////////////////////////////////////////////




  // markers to detect certain spells

  OUTER_SPRINT ITEM_MM_SEEN dw#mmsee
  OUTER_SPRINT ITEM_PSIONIC_SEEN dw#pssee
  OUTER_SPRINT ITEM_ANTIWEB_SEEN dw#wbsee
  OUTER_SPRINT IMPRISONMENT_MARKER dw#mkimp
  OUTER_SPRINT MAZE_MARKER dw#mkmaz

////////////////////////////////////////////////////////
//// stratagems-specific macros and functions
////////////////////////////////////////////////////////

  INCLUDE ~%MOD_FOLDER%/lib/stratagems_shared.tph~
  INCLUDE "%MOD_FOLDER%/lib/kit_hardcode.tpa"
  ACTION_IF enhanced_edition BEGIN
     LAF build_kit_spell_enforcer STR_VAR kit="ARCHER ASSASIN BERSERKER BARBARIAN KENSAI SWASHBUCKLER WIZARDSLAYER BLACKGUARD" END
  END ELSE BEGIN
     LAF build_kit_spell_enforcer STR_VAR kit="ARCHER ASSASIN BERSERKER BARBARIAN KENSAI SWASHBUCKLER WIZARDSLAYER" END
  END


////////////////////////////////////////////////////////
//// mark some functions as not-to-be-parsed
////////////////////////////////////////////////////////

OUTER_SPRINT $SFO_do_not_parse_arguments("enforce_mage") ""
OUTER_SPRINT $SFO_do_not_parse_arguments("enforce_clericmage") ""
OUTER_SPRINT $SFO_do_not_parse_arguments("enforce_priest") ""
OUTER_SPRINT $SFO_do_not_parse_arguments("enforce_charclass") ""
OUTER_SPRINT $SFO_do_not_parse_arguments("genai") ""
OUTER_SPRINT $SFO_do_not_parse_arguments("fiend_general") ""


///////////////////////////////////////////////////////////////
///	Possibly-missing IDS entries
///
/// (check whether BG2 fixpack catches these)
///////////////////////////////////////////////////////////////

	ACTION_IF !enhanced_edition BEGIN

		COPY_EXISTING ~SPELL.IDS~ ~override~
			REPLACE_TEXTUALLY ~PSIONIC _SUPERIOR_INVISIBILITY~ ~PSIONIC_SUPERIOR_INVISIBILITY~
		BUT_ONLY

		APPEND ~STATE.IDS~ ~0x8010202D STATE_DISABLED~
			UNLESS ~0x8010202D STATE_DISABLED~  /// includes Helpless, Stunned, Panic, Sleeping, Charmed, Feebleminded, Confused

		APPEND ~STATE.IDS~ ~0x00000029 STATE_IMMOBILE~
			UNLESS ~0x00000029 STATE_IMMOBILE~  /// includes Helpless, Stunned, Sleeping

		APPEND ~STATE.IDS~ ~0x00400010 STATE_NOT_TARGETABLE~
			UNLESS ~0x00400010 STATE_NOT_TARGETABLE~  /// includes Improved Invisibility and plain Invisibility

		APPEND ~STATE.IDS~ ~0x00000FC0 STATE_REALLY_DEAD~
			UNLESS ~0x00000FC0 STATE_REALLY_DEAD~  

	END

///////////////////////////////////////////////////
// NPC summon fiend spell names
///////////////////////////////////////////////////

  OUTER_SPRINT WIZARD_SUMMON_FIEND_SCS "dw#sumfi"
  OUTER_SPRINT WIZARD_CACOFIEND_SCS "dw#cacof"
  OUTER_SPRINT WIZARD_GATE_SCS "dw#gatem"
  OUTER_SPRINT CLERIC_GATE_SCS "dw#gatep"

///////////////////////////////////////////////////
// String localisation
///////////////////////////////////////////////////

ACTION_IF GAME_IS "bgee" BEGIN
   OUTER_SPRINT trigger_string 25101
   OUTER_SPRINT minor_sequencer_string 26469
   OUTER_SPRINT sequencer_string 24618
   OUTER_SPRINT contingency_string 26577
   OUTER_SPRINT chain_contingency_string "-1"
   OUTER_SPRINT polymorphed_string 25124
END ELSE
ACTION_IF GAME_IS "iwdee" BEGIN
   OUTER_SPRINT trigger_string 26243
   OUTER_SPRINT minor_sequencer_string 25889
   OUTER_SPRINT sequencer_string 25951
   OUTER_SPRINT contingency_string 25942
   OUTER_SPRINT chain_contingency_string 26328
   OUTER_SPRINT polymorphed_string 37703
END ELSE BEGIN
   OUTER_SPRINT trigger_string 26243
   OUTER_SPRINT minor_sequencer_string 5013
   OUTER_SPRINT sequencer_string 25951
   OUTER_SPRINT contingency_string 25942
   OUTER_SPRINT chain_contingency_string 26328
   OUTER_SPRINT polymorphed_string 339
END



OUTER_SET SFO_unusable_string_tra_ref=100400
OUTER_SET SFO_usable_string_tra_ref=100401

 ACTION_IF !("%LANGUAGE%" STRING_EQUAL_CASE "EMPTY_LANGUAGE") BEGIN
   OUTER_SPRINT SFO_reserved_previously_string @100300 // " (cast previously)"
 END

////////////////////////////////////////////////////////
//// Disable HLAs and sequencers/triggers on BG1-only install; disable HLAs on IWD install
////////////////////////////////////////////////////////

   OUTER_SET disable_hlas=!is_bg2

   OUTER_SET disable_sequencers=!(is_bg2 || is_iwd)



////////////////////////////////////////////////////////
//// 	Check if Free Action protects from Stun (hardcoded, painfully slow otherwise)
////////////////////////////////////////////////////////

   LAF check_label STR_VAR label="dw#freeaction_stun" RET stun=value END
   LAF check_label STR_VAR label="dw#freeaction_nostun" RET nostun=value END
   ACTION_IF !(stun || nostun) BEGIN
     COPY_EXISTING "sppr403.spl" override
        GET_OFFSET_ARRAY2 fx_array (LONG_AT 0x64) SPL_V10_HEAD_EFFECTS
        PHP_EACH fx_array AS null=>fx_off BEGIN
               PATCH_IF ((SHORT_AT fx_off)=101 && (SHORT_AT (fx_off+0x8))=45) BEGIN
                  SET stun=1
               END
        END
     BUT_ONLY
     ACTION_IF stun BEGIN
         LAF make_label STR_VAR label="dw#freeaction_stun" END
      END ELSE BEGIN
         LAF make_label STR_VAR label="dw#freeaction_nostun" END
      END
   END
   ACTION_IF stun THEN BEGIN
       OUTER_SPRINT ssllibrary "%ssllibrary% %MOD_FOLDER%/ssl/library_freeactionstun"
   END

///////////////////////////////////////////////////
// load in HLAs (it gets done a zillion times, may as well do it once up-front)
///////////////////////////////////////////////////

ACTION_IF !disable_hlas BEGIN
   LAF include STR_VAR file=hla.tph locbase=lib END
   LAM read_in_hla_choices
END

///////////////////////////////////////////////////
// load in proficiencies
///////////////////////////////////////////////////


        LAF data_proficiencies RET_ARRAY weapprof profs profsmax END
		OUTER_SET proficiencies_read_in=1

/////////////////////////////////////////////////////////
///  Create testing item
////////////////////////////////////////////////////////

ACTION_IF !FILE_EXISTS_IN_GAME ~dw#kilsw.itm~ BEGIN
   LAF include STR_VAR file=killsword.tph location=lib END
   LAF killsword END
END

VERBOSE
END   // end of do-once part

////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
//// 	Things to do every time
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////


////////////////////////////////////////////////////////
//// 	Randomize if appropriate
////////////////////////////////////////////////////////


  LAF ini_check INT_VAR silent=1 STR_VAR ini=God_Does_Not_Play_Dice RET value END
  
  ACTION_IF value BEGIN
     RANDOM_SEED 3
  END ELSE BEGIN
     RANDOM_SEED 3.14
  END

///////////////////////////////////////////////////
// detect whether Truesight cures blindness
///////////////////////////////////////////////////

    LAF check_label STR_VAR label="dw#truesightblindness" RET value END
    ACTION_IF (value || demivrgvs ) BEGIN
           OUTER_SPRINT ~sslvariables~ ~%sslvariables%~^~&TruesightCuresBlindness=True~
    END
    
     ACTION_IF debug_variable=3 BEGIN
         FAIL "SCS setup complete; exiting, since this is just speedtest code"
     END

    


